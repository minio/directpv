name: GitHub CI

on:
  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
        id: go
        
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Checking for vulnerabilities in the dependencies
        env:
          CGO_ENABLED: 0
          GO111MODULE: on
        run: |
          sudo apt install jq -y
          sudo sysctl net.ipv6.conf.all.disable_ipv6=0
          sudo sysctl net.ipv6.conf.default.disable_ipv6=0
          nancy_version=$(curl --retry 10 -Ls -o /dev/null -w "%{url_effective}" https://github.com/sonatype-nexus-community/nancy/releases/latest | sed "s/https:\/\/github.com\/sonatype-nexus-community\/nancy\/releases\/tag\///")
          curl -L -o nancy https://github.com/sonatype-nexus-community/nancy/releases/download/${nancy_version}/nancy-${nancy_version}-linux-amd64 && chmod +x nancy
          go list -deps -json ./... | jq -s 'unique_by(.Module.Path)|.[]|select(has("Module"))|.Module' | ./nancy sleuth
          
      - name: Build and upload coverage to Codecov
        env:
          CGO_ENABLED: 0
          GO111MODULE: on
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          diff -au <(gofmt -s -d cmd) <(printf "")
          diff -au <(gofmt -s -d pkg) <(printf "")
          go test -v ./... -tags skip -coverprofile="codecov-coverage.txt" -covermode=atomic
          ./build.sh
          curl -s https://codecov.io/bash | bash -s -- -f "codecov-coverage.txt" -F ubuntu-latest
          docker build . -t "direct-csi:latest"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --skip-publish --skip-sign --rm-dist --snapshot
        

