run:
  timeout: 5m
  skip-files:
    - ".*crd_bindata.go$"

linters-settings:
  golint:
    min-confidence: 0

  misspell:
    locale: US

linters:
  disable-all: true
  enable:
    - deadcode
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - structcheck
    - typecheck
    - unused
    - varcheck
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - exhaustivestruct
    - exportloopref
    - forbidigo
    - forcetypeassert
    - gci
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - ifshort
    - importas
    - ireturn
    - maintidx
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - paralleltest
    - prealloc
    - predeclared
    - promlinter
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - tagliatelle
    - tenv
    - thelper
    - tparallel
    - unconvert
    - unparam
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl

issues:
  exclude-use-default: false
  exclude:
    - should have a package comment
    - Error return value of `` is not checked
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv)|flag\.Set|flag\.CommandLine\.Parse|viper\.BindPFlags. is not checked
    - the goroutine calls T.Fatal(f)?, which must be called in the same goroutine as the test
    - call to T.Fatal(f)?
